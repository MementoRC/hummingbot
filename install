#!/bin/bash

cd $(dirname $0)

# Compatibility logic for older Anaconda versions.
if [ "${CONDA_EXE} " == " " ]; then
    CONDA_EXE=$((find /opt/conda/bin/conda || find ~/anaconda3/bin/conda || \
	    find /usr/local/anaconda3/bin/conda || find ~/miniconda3/bin/conda  || \
	    find /root/miniconda/bin/conda || find ~/Anaconda3/Scripts/conda || \
	    find $CONDA/bin/conda) 2>/dev/null)
fi

if [ "${CONDA_EXE}_" == "_" ]; then
    echo "Please install Anaconda w/ Python 3.7+ first"
    echo "See: https://www.anaconda.com/distribution/"
    exit 1
fi

CONDA_BIN=$(dirname ${CONDA_EXE})
MACOS_ENV=setup/environment.yml
LINUX_ENV=setup/environment-linux.yml
LINUX_AARCH64_ENV=setup/environment-linux-aarch64.yml
WIN64_ENV=setup/environment-win64.yml
ENV_FILE=$MACOS_ENV

CONDA_AGENT=$(${CONDA_EXE} info --json | jq -r '.user_agent')

if uname | egrep -qe "Linux"; then
    if uname -m | egrep -qe "aarch64"; then
        ENV_FILE=$LINUX_AARCH64_ENV
    else
        ENV_FILE=$LINUX_ENV
    fi
elif uname | egrep -qe "MINGW64"; then
    ENV_FILE=$WIN64_ENV
fi

VALID_ENV_NAME=$(grep  'name:' ${ENV_FILE} | tail -n1 | awk '{ print $2}')
read -t 30 -p "Enter environment name [${VALID_ENV_NAME}](30s wait): " RESPONSE
if [ "${RESPONSE}_" == "_" ]; then
    echo ""
    echo "  -> Using default environment name: ${VALID_ENV_NAME}"
    echo "                   environment file: ${ENV_FILE}"
    echo "                   Conda user_agent: ${CONDA_AGENT}"
    RESPONSE=${VALID_ENV_NAME}
fi

ENV_NAME=${RESPONSE}

if [ "$ENV_NAME" != "$VALID_ENV_NAME" ]; then
    echo "*** Incompatible environment name in ${ENV_FILE} (${VALID_ENV_NAME}). Please resolve and try again."
    exit 1
fi

if ${CONDA_EXE} env list | awk '{ print $1 }' | egrep -e "^${ENV_NAME}$" 1>/dev/null; then
    ${CONDA_EXE} env update -f $ENV_FILE --prune
else
    ${CONDA_EXE} env create -f $ENV_FILE
fi

source "${CONDA_BIN}/activate" ${ENV_NAME}

# Installing conflicting pip packages without their dependencies
# They could override the environment plan with conda
echo "Installing conflicting pip packages without their dependencies"
pip install --no-deps -r setup/pip_packages.txt 1> logs/pip_install.log 2>&1
pre-commit install
