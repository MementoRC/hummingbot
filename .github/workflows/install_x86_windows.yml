name: ci

on:
  workflow_call:
    inputs:
      should_run:
        required: false
        type: boolean
        default: false

jobs:
  build_hummingbot:
    name: build/tests ${{ matrix.os }}
    if: ${{ inputs.should_run == true }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-2019]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Checkout Hummingbot - not much can be done without that!
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Checkout Hummingbot, set HB env variables and check cache
      - id: checkout-hb-cache-hit
        uses: ./.github/actions/set_hb_env_cache
        with:
          runner: ${{ runner.os }}
          conda_env_hash: ${{ hashFiles('setup/environment-win64.yml') }}

      # Double-check Conda environment
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ github.env.HB_PYTHON_VERSION }}
          auto-update-conda: true
          auto-activate-base: true
          use-only-tar-bz2: true

#      # Install environment and Hummingbot
#      - name: Install environment and Hummingbot
#        uses: ./.github/actions/install_env_and_hb
#        with:
#          program-cache-hit: ${{steps.program-changes.outputs.cache-hit}}
#          dependencies-cache-hit: ${{steps.conda-dependencies.outputs.cache-hit}}
#          shell: ${{ defaults.run.shell }}
#
#      # Compile and run tests if code has changed
#      - name: Run pre-commit hooks on diff
#        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
#        run: |
#          source $CONDA/etc/profile.d/conda.sh
#          conda activate hummingbot
#          pre-commit run --files $(git diff --name-only origin/$GITHUB_BASE_REF)
#
#      - name: Run stable tests and calculate coverage
#        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
#        run: |
#          source $CONDA/etc/profile.d/conda.sh
#          conda activate hummingbot
#          coverage run -m pytest \
#            --ignore="test/connector" \
#            --ignore="test/debug" \
#            --ignore="test/mock" \
#            --ignore="test/hummingbot/connector/gateway/amm" \
#            --ignore="test/hummingbot/connector/gateway/clob"
#
#      - name: Check and report global coverage
#        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
#        run: |
#          source $CONDA/etc/profile.d/conda.sh
#          conda activate hummingbot
#          make report_coverage
#
#      - name: Validate coverage for the changes
#        if: github.event_name == 'pull_request' && (steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true')
#        run: |
#          source $CONDA/etc/profile.d/conda.sh
#          conda activate hummingbot
#          git fetch --all -q
#          git checkout -b $GITHUB_SHA
#          coverage xml
#          diff-cover --compare-branch=origin/$GITHUB_BASE_REF --fail-under=80 coverage.xml
#
#      # Notify results to discord
#      - uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.0'
#      - name: Send Webhook Notification
#        if: github.event_name != 'pull_request'
#        env:
#          JOB_STATUS: ${{ job.status }}
#          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
#          HOOK_OS_NAME: ${{ runner.os }}
#          WORKFLOW_NAME: ${{ github.workflow }}
#        run: |
#          git clone --depth 1 https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
#          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
#        shell: bash
