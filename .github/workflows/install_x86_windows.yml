name: ci

on:
  workflow_call:
    # inputs:
    #   config-path:
    #     required: true
    #     type: string
    # secrets:
    #   envPAT:
    #     required: true

jobs:
  build_hummingbot:
    name: build/tests ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-2019]
        python-version: ["3.8.2"]
    if: github.event.pull_request.draft == false && needs.run_client.outputs.is_set == 'true'

    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Wait on whether updates require to run the tests
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Check if client files changed'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Use cache's hashFiles function to check for changes in core code
      - name: Check for code changes
        id: program-changes
        uses: actions/cache@v3
        env:
          # Increase this value to manually reset cache if program files have not changed
          CACHE_NUMBER: 0
        with:
          path: README.md # placeholder file
          key: ${{ runner.os }}-build-${{ env.CACHE_NUMBER }}-${{ hashFiles('hummingbot/*', '**/*.py', '**/*.py*', '**/*.pxd', 'test/*') }}

      # Setup Miniconda and create environment ($CONDA)
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge, defaults
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true
          auto-activate-base: true
          python-version: ${{ matrix.python-version }}

      # Check for setup/environment-linux.yml changes
      - name: Cache conda dependencies
        id: conda-dependencies
        uses: actions/cache@v3
        env:
          # Increase this value to manually reset cache if setup/environment-linux.yml has not changed
          CONDA_CACHE_NUMBER: 0
        with:
          path: |
            $CONDA/envs/hummingbot
          key: ${{ runner.os }}-conda-${{ env.CONDA_CACHE_NUMBER }}-${{ hashFiles('setup/environment-linux.yml') }}

      # Install environment and Hummingbot
      - name: Install environment and Hummingbot
        uses: ./.github/actions/install_env_and_hb
        with:
          program-cache-hit: ${{steps.program-changes.outputs.cache-hit}}
          dependencies-cache-hit: ${{steps.conda-dependencies.outputs.cache-hit}}
          shell: bash -l {0}

      # Compile and run tests if code has changed
      - name: Run pre-commit hooks on diff
        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate hummingbot
          pre-commit run --files $(git diff --name-only origin/$GITHUB_BASE_REF)

      - name: Run stable tests and calculate coverage
        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate hummingbot
          coverage run -m pytest \
            --ignore="test/connector" \
            --ignore="test/debug" \
            --ignore="test/mock" \
            --ignore="test/hummingbot/connector/gateway/amm" \
            --ignore="test/hummingbot/connector/gateway/clob"

      - name: Check and report global coverage
        if: steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true'
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate hummingbot
          make report_coverage

      - name: Validate coverage for the changes
        if: github.event_name == 'pull_request' && (steps.program-changes.outputs.cache-hit != 'true' || steps.conda-dependencies.outputs.cache-hit != 'true')
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate hummingbot
          git fetch --all -q
          git checkout -b $GITHUB_SHA
          coverage xml
          diff-cover --compare-branch=origin/$GITHUB_BASE_REF --fail-under=80 coverage.xml

      # Notify results to discord
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
      - name: Send Webhook Notification
        if: github.event_name != 'pull_request'
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone --depth 1 https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
