name: ci

on:
  workflow_call:
    inputs:
      should_run:
        required: false
        type: boolean
        default: false

jobs:
  build_hummingbot:
    name: build/tests ${{ matrix.os }}
    if: ${{ inputs.should_run == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Read HB env variables
      - name: Set Environment Variables
        uses: ./.github/actions/set_env_vars
        with:
          varFilePath: ./.github/variables/hb_env_variables.env

      ## Checkout Hummingbot
      #- id: checkout-hb-cache-hit
      #  uses: ./github/actions/checkout_hb_cache
      #  with:
      #    runner: ${{ runner.os }}
      #    conda_env_hash: ${{ hashFiles('setup/environment-linux.yml') }}
#
      ## Double-check Conda environment
      #- uses: conda-incubator/setup-miniconda@v2
      #  with:
      #    miniconda-version: "latest"
      #    python-version: ${{ github.env.HB_PYTHON_VERSION }}
      #    auto-update-conda: true
      #    auto-activate-base: true
      #    use-only-tar-bz2: true
#
      ## Install environment and Hummingbot
      #- name: Install environment and Hummingbot
      #  uses: ./.github/actions/install_env_and_hb
      #  with:
      #    program-cache-hit: ${{steps.checkout-hb-cache-hit.outputs.hb-cache-hit}}
      #    dependencies-cache-hit: ${{steps.checkout-hb-cache-hit.outputs.conda-cache-hit}}
      #    shell: ${{ defaults.run.shell }}
#
      ## Compile and run tests if code has changed
      #- name: Run pre-commit hooks on diff
      #  if: steps.checkout-hb-cache-hit.outputs.hb-cache-hit != 'true' || steps.checkout-hb-cache-hit.outputs.conda-cache-hit != 'true'
      #  run: |
      #    conda activate hummingbot
      #    pre-commit run --files $(git diff --name-only origin/$GITHUB_BASE_REF)
#
      #- name: Run stable tests and calculate coverage
      #  if: steps.checkout-hb-cache-hit.outputs.hb-cache-hit != 'true' || steps.checkout-hb-cache-hit.outputs.conda-cache-hit != 'true'
      #  run: |
      #    conda activate hummingbot
      #    make test
#
      #- name: Check and report global coverage
      #  if: steps.checkout-hb-cache-hit.outputs.hb-cache-hit != 'true' || steps.checkout-hb-cache-hit.outputs.conda-cache-hit != 'true'
      #  run: |
      #    conda activate hummingbot
      #    make report_coverage
#
      #- name: Validate coverage for the changes
      #  if: github.event_name == 'pull_request' && (steps.checkout-hb-cache-hit.outputs.hb-cache-hit != 'true' || steps.checkout-hb-cache-hit.outputs.conda-cache-hit != 'true')
      #  run: |
      #    conda activate hummingbot
      #    git fetch --all -q
      #    git checkout -b $GITHUB_SHA
      #    coverage xml
      #    diff-cover --compare-branch=origin/$GITHUB_BASE_REF --fail-under=80 coverage.xml
#
      ## Notify results to discord
      #- uses: ruby/setup-ruby@v1
      #  with:
      #    ruby-version: '3.0'
      #- name: Send Webhook Notification
      #  if: github.event_name != 'pull_request'
      #  env:
      #    JOB_STATUS: ${{ job.status }}
      #    WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      #    HOOK_OS_NAME: ${{ runner.os }}
      #    WORKFLOW_NAME: ${{ github.workflow }}
      #  run: |
      #    git clone --depth 1 https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
      #    bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
      #  shell: bash
#